//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "heros")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub hp_max: Option<f32>,
    pub hp_growth: Option<f32>,
    pub hp_start: Option<f32>,
    pub mp_max: Option<f32>,
    pub mp_growth: Option<f32>,
    pub mp_start: Option<f32>,
    pub attack_max: Option<f32>,
    pub attack_growth: Option<f32>,
    pub attack_start: Option<f32>,
    pub defense_max: Option<f32>,
    pub defense_growth: Option<f32>,
    pub defense_start: Option<f32>,
    pub hp_5s_max: Option<f32>,
    pub hp_5s_growth: Option<f32>,
    pub hp_5s_start: Option<f32>,
    pub mp_5s_max: Option<f32>,
    pub mp_5s_growth: Option<f32>,
    pub mp_5s_start: Option<f32>,
    pub attack_speed_max: Option<f32>,
    pub attack_range: Option<String>,
    pub role_main: Option<String>,
    pub role_assist: Option<String>,
    pub birthdate: Option<Date>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
