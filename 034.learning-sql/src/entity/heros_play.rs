//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "heros_play")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub hero_name: Option<String>,
    pub game_id: Option<i32>,
    pub player_name: Option<String>,
    pub kda_k: Option<i32>,
    pub kda_d: Option<i32>,
    pub kda_a: Option<i32>,
    pub money: Option<i32>,
    pub damage_input: Option<i32>,
    pub damage_output: Option<i32>,
    pub win: Option<i8>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
